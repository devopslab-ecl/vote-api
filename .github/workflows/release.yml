name: docker_release
 
on:
  release:
    types: [published]
 
jobs:
  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
 
    - name: Build the frontend image and push it to ACR
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.REGISTRY_SERVER }}/vote-app/vote-api:${{ github.event.release.tag_name }}
        file: Dockerfile
      
    # https://github.com/orgs/community/discussions/26323#discussioncomment-3251454
    # Use the GitHub API to make an authenticated call that triggers a workflow
    # in the manifests repository. The targeted workflow opens a PR to use the
    # new image that was pushed to quay.io. A personal access token (PAT) is
    # required to make the API call. The PAT can be created by a by visiting
    # https://github.com/settings/personal-access-tokens/new, selecting the manifest
    # repository, and then adding actions read/write permissions to the PAT
    # 
    # Set the PAT at https://github.com/USERNAME/THIS_REPO/settings/secrets/actions
    # 
    # You can manually trigger the action using curl
    # curl -X POST \
    # -H "Authorization: Bearer $PAT" \
    # -H "Accept: application/vnd.github.v3+json" \
    # https://api.github.com/repos/ORG_OR_USER/MANIFEST_REPO/actions/workflows/update-backend-image.yaml/dispatches \
    # -d '{"ref":"main", "inputs": { "image": "foo" } }'
    - name: Trigger update workflow in the manifests repository
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITOPS_ACTION_PAT }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: 'devopslab-ecl',
            repo: 'vote-app-gitops',
            workflow_id: '.github/workflows/update_api_version.yaml',
            ref: 'main',
            inputs: {
              message: '${{ steps.git-message.outputs.message }}',
              image: '${{ secrets.REGISTRY_SERVER }}/vote-app/vote-api:${{ github.event.release.tag_name }}',
              version: '${{ github.event.release.tag_name }}'
            }
          })